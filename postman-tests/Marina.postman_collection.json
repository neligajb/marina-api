{
	"variables": [],
	"info": {
		"name": "Marina",
		"_postman_id": "0b80c180-4888-e02f-adca-0301f3351e6c",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Add Boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"boatId\", jsonData.id);",
							"",
							"tests[\"Boat successfully created\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"SS Leisure\", \n\t\"type\": \"schooner\", \n\t\"length\": 32\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add Boat without name",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Bad POST to boats gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"type\": \"scooner\", \n\t\"length\": 32\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Modify Boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Boat successfully modified\"] = jsonData.name === \"Foreign Keys\";"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats/{{boatId}}",
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Foreign Keys\", \n\t\"type\": \"catamaran\", \n\t\"length\": 44\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Modify Boat with bad ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Bad PATCH to boats gives 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats/aghkZXgdfg",
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Foreign Keys\", \n\t\"type\": \"catamaran\", \n\t\"length\": 44\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Modify Boat with no ID param",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"PATCH to boats with missing ID gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats",
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Foreign Keys\", \n\t\"type\": \"catamaran\", \n\t\"length\": 44\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Boat successfully GET'd\"] = jsonData.name === \"Foreign Keys\";"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats/{{boatId}}",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Boat with no ID param",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Geting all boats returns list\"] = jsonData.length >= 1;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Replace Boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Slip successfully replaced with PUT\"] = jsonData.name === \"SS Fergie\";"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats/{{boatId}}",
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"SS Fergie\",\n\t\"type\": \"yacht\",\n\t\"length\": 130\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Replace Boat bad ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"PUT to boats with bad ID gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats/dsfds",
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"number\": 10}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Replace Boat with no ID param",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"PUT to boats with missing ID gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats",
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"number\": 10}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete Boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"DELETE Boat successful\"] = responseBody.has(\"Deleted\");"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats/{{boatId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete Boat with bad ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Bad DELETE to boats gives 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats/trtr",
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete Boat with no ID param",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"DELETE to boats with missing ID param gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats",
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add Boat again",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"boatId\", jsonData.id);",
							"",
							"tests[\"Boat successfully created\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"SS Leisure\", \n\t\"type\": \"scooner\", \n\t\"length\": 32\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add Slip",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"slipId\", jsonData.id);",
							"",
							"tests[\"Slip successfully created\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"number\": 1\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add Slip without number",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Bad POST to slips gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Modify Slip",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Slip successfully modified\"] = jsonData.number == 3;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}",
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"number\": 3\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Modify Slip with bad ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Bad PATCH to slips gives 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/aghkZXgdfg",
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"number\": 99\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Modify Slip with no ID param",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"PATCH to slips with missing ID gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips",
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"number\": 99\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Slip",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Slip successfully GET'd\"] = jsonData.number == 3;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Slip with no ID param",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Geting all slips returns list\"] = jsonData.length >= 1;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Replace Slip",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Slip successfully replaced with PUT\"] = jsonData.number === 10;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}",
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"number\": 10}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Replace Slip bad ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"PUT to slips with bad ID gives 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/dsfds",
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"number\": 10}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Replace Slip with no ID param",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"PUT to slips with missing ID gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips",
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"number\": 10}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete Slip",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"DELETE Slip successful\"] = responseBody.has(\"Deleted\");"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete Slip with bad ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Bad DELETE to slips gives 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/trtr",
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete Slip with no ID param",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"DELETE to slips with missing ID param gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips",
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add Slip again",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"slipId\", jsonData.id);",
							"",
							"tests[\"Slip successfully created\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"number\": 1\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Boat Arrival",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Successful Boat arrival\"] = jsonData.current_boat.includes(environment.boatId) === true;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/arrival/{{boatId}}",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Boat Arrival for occupied slip",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Boat Arrival to occupied slip returns 403\"] = responseCode.code === 403;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/arrival/{{boatId}}",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Boat Arrival with bad boat ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Boat Arrival with bad slip ID gives 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/tdrt/arrival/{{boatId}}",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Boat Arrival with bad slip ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Boat Arrival with bad boat ID gives 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/arrival/fdsfds",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Boat Arrival with no slip ID param",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Boat arrival with missing slip ID gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/arrival/",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Boat Departure",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Successful Boat departure\"] = jsonData.current_boat === null;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/departure/{{boatId}}",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Boat Departure with bad boat ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Boat Departure with bad boat ID gives 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/tdrt/departure/{{boatId}}",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Boat Departure with bad slip ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Boat Departure with bad slip ID gives 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/departure/fdsfds",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Boat Departure with no slip ID param",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Boat departure with missing slip ID gives 400\"] = responseCode.code === 400;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/departure/",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Boat Arrival again",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Successful Boat arrival\"] = jsonData.current_boat.includes(environment.boatId) === true;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/arrival/{{boatId}}",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete Boat for testing Slip status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"DELETE Boat successful\"] = responseBody.has(\"Deleted\");"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats/{{boatId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Slip after deleting its boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Deleting boat empties slip\"] = jsonData.current_boat === null;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add a new Boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"boatId\", jsonData.id);",
							"",
							"tests[\"Boat successfully created\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"SS n00b\",\n\t\"type\": \"dinghy\",\n\t\"length\": 6\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add new Slip",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"slipId\", jsonData.id);",
							"",
							"tests[\"Slip successfully created\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"number\": 1\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "New boat arrival",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Successful Boat arrival\"] = jsonData.current_boat.includes(environment.boatId) === true;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/arrival/{{boatId}}",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete Slip for testing Boat status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"DELETE Slip successful\"] = responseBody.has(\"Deleted\");"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Boat after deleting its Slip",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Deleting slip set boat to 'At Sea'\"] = jsonData.at_sea === true;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats/{{boatId}}",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add another new Boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"boatId\", jsonData.id);",
							"",
							"tests[\"Boat successfully created\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/boats",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"SS n00b2\",\n\t\"type\": \"dinghy\",\n\t\"length\": 6\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add another new Slip",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"slipId\", jsonData.id);",
							"",
							"tests[\"Slip successfully created\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"number\": 5\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Another new Boat arrival",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Successful Boat arrival\"] = jsonData.current_boat.includes(environment.boatId) === true;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/arrival/{{boatId}}",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Boat via Slip ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Get current boat from slip ID\"] = jsonData.self.includes(environment.boatId) === true;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/boat",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Boat via bad Slip ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Get boat with bad slip ID gives 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/fdsfsdf/boat",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Another new boat departure",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Successful Boat departure\"] = jsonData.current_boat === null;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/departure/{{boatId}}",
				"method": "PUT",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Boat via Slip ID for empty Slip",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Get current boat from slip ID\"] = responseBody.includes('null') === true;"
						]
					}
				}
			],
			"request": {
				"url": "{{url}}/slips/{{slipId}}/boat",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		}
	]
}